<?xml version="1.0" encoding="UTF-8"?>

<!--
  2025-10-27 ver
  made by Kit
  shout-outs to my brother :)
  -
  A syntax file for LilyPond 2.24.4. Mostly follows the colours
  in the documentation. Should work with any text editor that
  uses gtksourceview.
  A little clumsy. Still incomplete in a few areas.
  Thank you for using this file!
-->

<language id="lilypond" name="LilyPond" version="2.0" _section="Markup">

<metadata>
  <property name="globs">*.ly;*.ily</property>
  <property name="line-comment-start">%</property>
  <property name="block-comment-start">%{</property>
  <property name="block-comment-end">%}</property>
</metadata>

<styles>
  <style id="comment"           name="Comment"           map-to="def:comment"/>
  <style id="string"            name="String"            map-to="def:string"/>
  <style id="articulation"      name="Articulation"      map-to="def:string"/>
  <style id="duration"          name="Note Duration"     map-to="def:preprocessor"/>
  <style id="special-text"      name="Special Text"      map-to="def:preprocessor"/>
  <style id="function"          name="function"          map-to="def:identifier"/>
  <style id="context"           name="Context"           map-to="def:type"/>
  <style id="engraver"          name="Engraver"          map-to="def:type"/>
  <style id="layout-var"        name="Layout Variable"   map-to="def:type"/>
  <style id="layout-object"     name="Layout Object"     map-to="def:special-char"/>
  <style id="property"          name="Property"          map-to="def:special-char"/>
  <style id="keyword"           name="Keywords"          map-to="def:keyword"/>
</styles>

<!--things I might plinK up:
  non-public procedures in some distant future maybe
  might wanna duration and articulation and keyword highlight ancient shit (notref 2.9)
    -\melisma & \melismaEnd
  StaffHighlight not highlighted in LilyDoc (v2.25.29 NotRef 7.1.6)
  Timing not highlighted in lilydoc (v2.25.29 NotRef 2.3.1)
-->
<!--TODO:
  figure out how to include comments between \tweak and etc and properties. bc that is possible. fml lmao
  remove every class=no-spell-check and just put one at the main context way at the end?
  add escape chars to strings
-->

<definitions>
<context id="lilypond">
  <include>

  <!--valid values for \accidentalStyle-->
  <define-regex id="accidentalStyle-vals" extended="true">
    (choral|piano)(-cautionary)? | default |
    dodecaphonic(-(first|no-repeat))? | forget |
    (neo-)?modern(-voice)?(-cautionary)? |
    no-reset | teaching | voice
  </define-regex>

  <!--valid values for \clef that aren't just strings (e.g. "G2" and "mensural-f")-->
  <define-regex id="clefs" extended="true">
    alto(varC)? | baritone(var[CF])? | C | french | F | G(G)? |
    hufnagel-do-fa | kievan-do | (mensural|petrucci)-[fg] |
    (mezzo)?soprano | (modern)?tab | (sub)?bass | tenor(G|varC)? |
    treble | var(baritone|C) | (var)?percussion | violin
  </define-regex>

  <define-regex id="contexts" extended="true">
    (Choir|Drum|Grand|InternalGregorian|One|Piano|Rhythmic|Tab)?Staff |  #Staff
    (Cue|Drum|Null|Tab)?Voice |                                          #Voice
    Chord(Grid(Score)?|Names) |                                          #Chord
    (GregorianTranscription|Vaticana)(Lyrics|Staff|Voice) |              ##
    (Kievan|Mensural|Petrucci)(Staff|Voice) |                            ##
    StandaloneRhythm(Score|Staff|Voice) |                                #StandaloneRhythm
    Bottom | Devnull | Dynamics | FiguredBass | FretBoards | Global |    #etc
    Lyrics | NoteNames | Score | StaffGroup | Timing                     ##
  </define-regex>

  <!--valid values for \language-->
  <define-regex id="langs" extended="true">
    arabic | catal(á|an) | deutsch | english |
    espa[nñ]ol | français | italiano | nederlands |
    norsk | portugu[eê]s | suomi | svenska | vlaams
  </define-regex>

  <!--valid values for \repeat-->
  <define-regex id="repeats">percent|segno|tremolo|unfold|volta</define-regex>

<!--COMMENT, STRING, BOOLEAN-->

  <context id="block-comment" style-ref="comment" class="comment">
    <start>%{</start>
    <end>%}</end>
    <include>
      <context ref="def:in-comment"/>
    </include>
  </context>

  <context id="line-comment" style-ref="comment" end-at-line-end="true" class="comment">
    <start>%</start>
    <include>
      <context ref="def:in-comment"/>
    </include>
  </context>
  
  <context id="comment" class="comment">
    <include>
      <context ref="block-comment"/>
      <context ref="line-comment"/>
    </include>
  </context>

  <!--lookbehinds are so that "\" causes an infinite string but not "\\"-->
  <context id="string" style-ref="string" end-parent="true">
    <start>(?&lt;!\\)"</start>
    <end>(?&lt;!(?&lt;!\\)\\)"</end>
  </context>

  <context id="boolean" style-ref="keyword">
    <match>(?&lt;=#)[ft]\b</match>
  </context>

<!--ARTICULATION AND ADJACENT-->

  <!--articulation shit that doesn't take directions-->
  <context id="articulation" class="no-spell-check" style-ref="articulation">
    <prefix>\\</prefix>
    <suffix>(?![A-Za-z])</suffix>
      <!--piano pedals-->
    <keyword>sustain(On|Off)</keyword>
    <keyword>sostenuto(On|Off)</keyword>
    <keyword>unaCorda</keyword>
    <keyword>treCorde</keyword>
      <!--ancient-->
    <keyword>episem(Finis|Initium)</keyword>
      <!--¯\_(ツ)_/¯-->
    <keyword>breakDynamicSpan</keyword>
    <keyword>noBeam</keyword>
    <keyword>repeatTie</keyword>
    <keyword>vowelTransition</keyword>
  </context>

  <!--articulation shit that DOES take direction-->
  <context id="long-articulation" class="no-spell-check" style-ref="articulation">
    <match extended="true">
      [-^_]?\\(
      accentus | ictus | (semi)?circulus | signumcongruentiae |      #ancient
      accent | arpeggio | espressivo | marcato | portato |           #articulations
      staccatissimo | staccato | tenuto |                            ##
      (down|up)(mordent|prall) | (haydn|reverse|slash)?turn  |       #ornaments
      lineprall | mordent | prall(down|mordent|prall|up)? | trill |  ##
      (down|up)bow | flageolet | glide | glissando | (half)?open |   #instrument-specific and technique
      harmonic | (l|r)(heel|toe) | snappizzicato | stopped | thumb | ##
      segno | (henze|very)?(long|short)?fermata | (var)?coda |       #repeats and codas
      (de)?cresc | dim | (end)?(de)?cr |                             #dynamics
      dash(Bang|Dash|Dot|Hat|Larger|Plus|Underscore) |               #camelCaseStuff
      laissezVibrer | (start|stop)(GraceSlur|Group|(Text|Trill)Span) #
      )(?![A-Za-z])
    </match>
  </context>

  <!--articulation shorthands like . for staccato and > for accent-->
  <context id="short-articulation" style-ref="articulation">
    <match>[-^_][>\^_\.\+!-]|[:~]</match>
  </context>

  <!--articulations that might start with a \-->
  <context id="misc-articulation" style-ref="articulation">
    <match>[-^_]?(\\?[\(\)\[\]]|\\\^)</match>
  </context>

  <!--mostly dynamics that can be standardised so they go on forever >:)-->
  <context id="dynamic" style-ref="articulation">
    <match>([-^_]?\\(n|m[fp]|f+|f?p+|[rs]fz|s(f+|p+)|&lt;|&gt;|!))(?![\w-])</match>
  </context>

  <!--chord modifiers, too, count as articulation. also covers string numbers-->
  <context id="chord-modifier" style-ref="articulation">
    <match>(\^|[-^_]?\\)\d+</match>
  </context>

<!--DURATIONS, NUMBERS, OTHER SPECIAL TEXT-->

  <!--fractions, floats, regular numbers, durations-->
  <!--FIXME: the fingerings override chord modifiers
  I've tentatively moved articulations above numbers to fix it; may cause other problems-->
  <context id="number" style-ref="duration">
    <match extended="true">
      ([+-]?\d+)?(\.\d+)+ |    #floats
      [+-]?\d+\.* |            #durations
      [_^]\d+ |                #fingerings
      \*(?=[+-]?\d) |          #asterisks
      \/(?=[+-]?\d)            #slashes
    </match>
  </context>

  <context id="more-durations" class="no-spell-check" style-ref="duration">
    <prefix>\\</prefix>
    <suffix>(?![a-z])</suffix>
    <keyword>augmentum</keyword>
    <keyword>breve</keyword>
    <keyword>longa</keyword>
    <keyword>maxima</keyword>
  </context>

  <!--the measurements lilypond accepts. specifically:
  centimetres, milimitres, inches, points, and big points-->
  <context id="measurement" style-ref="special-text">
    <match>(?&lt;=\d)\\(cm|mm|in|pt|bp|staff-space)(?![a-z])</match>
  </context>

  <context id="chordmode" class="no-spell-check" style-ref="special-text">
    <match>(?&lt;=:)(aug|dim|maj|m|sus)</match>
  </context>

  <context id="encode" style-ref="special-text">
    <match extended="true">
      (?&lt;=\#)x[A-Za-z0-9]{4} |  # #x**** (hex) form unicode
      &amp;[A-Za-z0-9]+;           # [ampersand]****; form unicode
    </match>
  </context>

  <!--stuff from lily-library.scm that is all caps-->
  <context id="all-caps-stuff" style-ref="special-text">
    <match extended="true">
      (?&lt;=[#,])(
      CENTER|DOWN|LEFT|RIGHT|UP|START|STOP|X|Y|
      NATURAL|((DOUBLE|(FIVE|SEVEN)-HALF|SEMI|THREE-Q)-)?(FLAT|SHARP)|SEMI-TONE|
      PI-OVER-180|(TWO-)?PI|(THREE-)?PI-OVER-TWO|
      INFINITY-INT|(INF|ZERO)-MOMENT|ZERO-DURATION|PLATFORM
      )(?![A-Z-])
    </match>
  </context>

<!--LAYOUT VARS AND VALUES FOR FUNCTIONS AND PROPERTIES-->

  <context id="accidental-style" style-ref="function">
    <start>\\accidentalStyle(\s|$)</start>
    <include>
      <context ref="comment"/>
      <context ref="string"/>
      <context id="accidental-styles" style-ref="keyword" end-parent="true">
        <match>\%{accidentalStyle-vals}(?=([^a-z-]|$))</match>
      </context>
    </include>
  </context>

  <context id="accidental-style-after-context" style-ref="keyword">
    <match>(?&lt;=\.)\%{accidentalStyle-vals}(?![a-z-])</match>
  </context>

  <context id="clef-type" style-ref="function">
    <start>\\clef(\s|$)</start>
    <include>
      <context ref="comment"/>
      <context ref="string"/>
      <context id="clef-types" style-ref="keyword" end-parent="true">
        <match>\%{clefs}(?=([^A-Za-z-]|$))</match>
      </context>
    </include>
  </context>

  <context id="language" style-ref="function">
    <start>\\language(\s|$)</start>
    <include>
      <context ref="comment"/>
      <context ref="string"/>
      <context id="languages" style-ref="keyword" end-parent="true">
        <match>\%{langs}(?=([^a-z-]|$))</match>
      </context>
    </include>
  </context>

  <context id="repeat-type" style-ref="function">
    <start>\\repeat(\s|$)</start>
    <include>
      <context ref="comment"/>
      <context ref="string"/>
      <context id="repeat-types" style-ref="keyword" end-parent="true">
        <match>\%{repeats}(?=([^a-z]|$))</match>
      </context>
    </include>
  </context>

  <!--valid values for properties that only have a few values
  they're all souped together bc then I get more out of less
  I might discard this if it turns out to be too annoying-->
  <context id="prop-values" class="no-spell-check" style-ref="keyword">
    <match extended="true">
      (?&lt;=\#')(
      (bongos|congas|((agostini|weinberg)-)?drums|percussion|timbales)-style | 
      allow | (alt)?default | ambitus | apart | arabic | around | baroque |
      ((bar|dashed|dotted)-|out)?line | below-string | (black|semi)?petrucci | 
      brace | bracket(ed)? | breathing-sign | C | caps | 
      (centered|(left|right)sided)-stairs | chant(double|full|half|quarter)bar | 
      chords | classical | cross | (cue-(end-)?)?clef | (curved)?(caesura)? | 
      custom | custos | diamond | (([ds]emi|extra|ultra)-)?(bold|light) | 
      ((extra|ultra)-)?black | feta(Braces|Music|Text) | force | heavy | hairpin | 
      harmonic(-(black|mixed))? | hold | (hufnagel|medicaea|vaticana)(\.punctum)? |
      (if-no-)?beam | ignore | include | (in|out)side | in-dot | instrument | italic | 
      key-cancellation | (key|time)-signature | kievan | left-edge | 
      (left|right)-to-(left|right)-(greedy|polite) | line-bracket | medium | mixed | 
      (neo)?mensural | no-flag | none | normal | numbered | numbers(-with-letters)? | 
      (opposing-)?landscape | (outside|var)?comma | parenthesized | pre-bend(-hold)? | 
      ramp | recalculate | regular | roman(-(ij-)?(lower|upper))? | (rounded-)?box | 
      sans | signum-repetitionis | single-digit | slash | solo[12] | spacer | special | 
      staff(-(bar|ellipsis))? | straight | stub-(both|left|right) | text | thin | 
      (tick)?mark | triangle | trill | typewriter | unisono | (up)?bow | upright | 
      voice | white | xcircle | z(igzag)?
      )(?![\w.-])
    </match>
  </context>

  <!--\header block variables-->
  <context id="header-var" class="no-spell-check" style-ref="layout-var">
    <match extended="true">
      (?&lt;![\w-])(
      arranger | composer | copyright | dedication |
      instrument | meter | pdftitle | piece | poet |
      opus | (sub)?(sub)?title | tagline
      )(?![\w-])
    </match>
  </context>

  <!--\paper block variables
  \. in the prefix lookbehind is so they don't override grob props-->
  <context id="paper-var" class="no-spell-check" style-ref="layout-var">
    <prefix>(?&lt;![a-z\.-])</prefix>
    <suffix>(?![a-z-])</suffix>
    <keyword>(auto-)?first-page-number</keyword> <!--first-page-number-->
    <keyword>(short-)?indent</keyword> <!--indent-->
    <keyword>(bottom|top|inner|outer|left|right)-margin</keyword> <!-- -margin-->
    <keyword>(footnote|system)-separator-markup</keyword> <!-- -separator-markup-->
    <keyword>(markup|score|top)-(markup|system)-spacing</keyword> <!-- *-*-spacing except system-system and last-bottom-->
    <keyword>((max|min)-)?systems-per-page</keyword> <!--systems-per-page-->
    <keyword>(annotate|last-bottom|system-system)-spacing</keyword> <!--the rest of the -spacings-->
    <keyword>(line|paper)-width</keyword> <!-- -width-->
    <keyword>binding-offset</keyword>
    <keyword>blank-((after-score|last)-)?page-penalty</keyword>
    <keyword>bookpart-level-page-numbering</keyword>
    <keyword>check-consistency</keyword>
    <keyword>debug-(beam|slur|tie)-scoring</keyword>
    <keyword>horizontal-shift</keyword>
    <keyword>page-(breaking(-system-system-spacing)?|count|number-type|spacing-weight)</keyword>
    <keyword>paper-height</keyword>
    <keyword>print-(all-headers|(first-)?page-number)</keyword>
    <keyword>ragged-(bottom|last(-bottom)?|right)</keyword>
    <keyword>reset-footnotes-on-new-page</keyword>
    <keyword>system-count</keyword>
    <keyword>two-sided</keyword>
  </context>

<!--FUNCTIONS AND PREDICATES USED IN SCHEME STUFF-->

  <!--R5RS primary & secondary, guile, and ly scheme preds-->
  <context id="predicate-soup" class="no-spell-check" style-ref="keyword">
    <prefix>(?&lt;![\w-])</prefix>
    <suffix>\?</suffix>
    <keyword>(symbol-key-)?alist</keyword> <!--alist-->
    <keyword>(in)?exact</keyword> <!--exact, inexact-->
    <keyword>(key|symbol)(-list(-or-(music|symbol))?)?</keyword> <!--key, symbol-->
    <keyword>((cheap|grob)-)?list</keyword> <!-- -list-->
    <keyword>(nega|posi)tive</keyword> <!--negative, positive-->
    <keyword>(moment-)?pair</keyword> <!--pair-->
    <keyword>((in|out)put-)?port</keyword> <!--port-->
    <keyword>(exact-)?rational</keyword> <!--rational, exact-rational-->
    <keyword>boolean(-or-symbol)?</keyword>
    <keyword>char(-(alphabetic|(lower|upper)-case|numeric|whitespace))?</keyword>
    <keyword>color</keyword>
    <keyword>complex</keyword>
    <keyword>eof-object</keyword>
    <keyword>even</keyword>
    <keyword>fraction</keyword>
    <keyword>hash-table</keyword>
    <keyword>index(-or-markup)?</keyword>
    <keyword>integer</keyword>
    <keyword>markup((-command)?-list)?</keyword>
    <keyword>null</keyword>
    <keyword>number-(list|or-(grob|pair|string)|pair(-list)?)</keyword>
    <keyword>odd</keyword>
    <keyword>real</keyword>
    <keyword>(rational-or-)?procedure</keyword>
    <keyword>rhythmic-location</keyword>
    <keyword>scale</keyword>
    <keyword>scheme</keyword>
    <keyword>string(-or-(music|pair|symbol))?</keyword>
    <keyword>vector</keyword>
    <keyword>void</keyword>
    <keyword>zero</keyword>
  </context>

  <!--ly exported preds-->
  <context id="lily-preds" class="no-spell-check" style-ref="keyword">
    <prefix>(?&lt;![\w-])ly:</prefix>
    <suffix>\?</suffix>
    <keyword>book</keyword>
    <keyword>context(-(def|mod))?</keyword>
    <keyword>di(mension|r|spatcher)</keyword>
    <keyword>duration</keyword>
    <keyword>font-metric</keyword>
    <keyword>grob(-(array|properties))?</keyword>
    <keyword>input-location</keyword>
    <keyword>item</keyword>
    <keyword>iterator</keyword>
    <keyword>lily-(lexer|parser)</keyword>
    <keyword>listener</keyword>
    <keyword>moment</keyword>
    <keyword>music(-(function|list|output))?</keyword>
    <keyword>(otf|pango)-font</keyword>
    <keyword>output-def</keyword>
    <keyword>page-marker</keyword>
    <keyword>paper-(book|system)</keyword>
    <keyword>pitch</keyword>
    <keyword>prob</keyword>
    <keyword>score</keyword>
    <keyword>skyline(-pair)?</keyword>
    <keyword>source-file</keyword>
    <keyword>spanner</keyword>
    <keyword>spring</keyword>
    <keyword>(stream-)?event</keyword>
    <keyword>stencil</keyword>
    <keyword>trans(form|lator(-group)?)</keyword>
    <keyword>unpure-pure-container</keyword>
  </context>

  <!--should capture most functions
  I might have to manually list the rest but like. please no-->
  <context id="sch-func" class="no-spell-check" style-ref="function">
    <match extended="true">
      (?&lt;![\w-])(
      ly:\w+(-\w+)*((::|-&gt;)\w+(-\w+)*)?(&lt;?\?|!)? | #ly:***
      \w+(-\w+)*(::|-&gt;)\w+(-\w+)* |                   #***::***  ***->***
      \w+(-\w+)+(&lt;?\?|!)                              #***?  ***&lt;?  ***!
      )(?![\w-])
    </match>
  </context>

  <!--[narrator] they did in fact have to list the rest
  I just fuckin dug through the scheme files. grepping define-public gives 900 matches
  some of these are split into two or more lines due to being too chonky to fit in one
  I also chose not to include the defined colours in output-lib.scm-->
  <context id="sch-func-electric-boogaloo" class="no-spell-check" style-ref="function">
    <prefix>(?&lt;![\w.-])</prefix>
    <suffix>(?![\w.-])</suffix>
    <keyword>\*(base-octave|breathe-shortage|debug|indent|location|omit-duration|parser|skip-word|syllabify)\*</keyword>
    <keyword>(alist|symbol)&lt;\?</keyword>
    <keyword>car&lt;=?</keyword>
    <keyword>(object-)?type(-name)?</keyword>
    <keyword>((documented-)?paper|flatten|instrument-names|uniqued)-alist</keyword> <!-- -alist-->
    <keyword>(chain-)?assoc-get</keyword> <!--assoc-get-->
    <keyword>(all|(begin|end)-of-line|center)-(in)?visible</keyword> <!--break-visibility procs-->
    <keyword>(function|(headers-property|prepend)-alist)-chain</keyword> <!-- -chain-->
    <keyword>(css|universal|x11)-color</keyword> <!-- -color-->
    <keyword>(construct-chord|parenthesize)-elements</keyword> <!-- -elements-->
    <keyword>(brace|glyph)-encoding-table</keyword> <!-- -encoding-table-->
    <keyword>(beam|sequential-music-to-chord)-exceptions</keyword> <!-- -exceptions-->
    <keyword>(default|flat|mensural|((modern|old)-)?straight|no(rmal)?|((create|retrieve)-)?glyph)-flag</keyword> <!-- -flag-->
    <keyword>(makam|standard)-alteration-glyph-name-alist</keyword> <!-- -glyph-name-alist pt1-->
    <keyword>alteration-(default|hufnagel|kievan|medicaea|mensural|vaticana)-glyph-name-alist</keyword> <!-- -glyph-name-alist pt2-->
    <keyword>(constante|elbowed|flared)-hairpin</keyword>
    <keyword>(mkdir|symlink(-or-copy)?)-if-not-exist</keyword> <!-- -if-not-exist-->
    <keyword>(empty|reverse|symmetric)-interval</keyword> <!-- -interval-->
    <keyword>(base|mmrest-of)-length</keyword> <!-- -length-->
    <keyword>(format-segno-mark-considering-bar|space)-lines</keyword> <!-- -lines                            vvv -list-->
    <keyword>(break-alignment|(composed|interpret)-markup|count|flatten|get-woodwind-key|uniq|woodwind-instrument)-list</keyword>
    <keyword>(clef-transposition|empty|(grob-)?interpret|note-name)-markup</keyword> <!-- -markup-->
    <keyword>(default|median)-measure-division-(chord-placement|lines)-alist</keyword> <!-- -measure-division-*-alist-->
    <keyword>(suggest-convert-ly|version-not-seen)-message</keyword> <!-- -message-->
    <keyword>(empty|extract(-(named|typed))?|(fold|for)-some|process|retrograde|scorify)-music</keyword><!-- -music pt1-->
    <keyword>(sequential(-alternative)?|simultaneous|unrelativable|voicify|volta-spec)-music</keyword> <!-- -music pt2-->
    <keyword>(ignatzek-chord|memorize-clef)-names</keyword> <!-- -names-->
    <keyword>(duration|pitch)-of-note</keyword> <!-- -of-note-->
    <keyword>(guile|lilypond-(exported|scheme)|r5rs-(primary|secondary))-predicates</keyword> <!-- -predicates-->
    <keyword>(dodecaphonic-no-repeat|(neo-modern|teaching)-accidental)-rule</keyword> <!-- -rule-->
    <keyword>(adjust-slash|box(-grob)?|bracketify|centered|circle|ellipse|empty|flip)-stencil</keyword> <!-- -stencil pt 1-->
    <keyword>(generate-(crop|preview)|hook|oval|parenthesize|point|rounded-box)-stencil</keyword> <!-- -stencil pt 2-->
    <keyword>(fret-parse-terse-definition|(identifiers|type-predicates)-doc|parse-terse)-string</keyword> <!-- -string-->
    <keyword>(cue|quote)-substitute</keyword> <!-- -substitute-->
    <keyword>((every-nth|modulo)-bar-number|every-nth-repeat-count)-visible</keyword> <!-- -visible-->
    <keyword>add-(bar-glyph-print-procedure|grace-property|lyrics|(music|pango)-fonts|music)</keyword>
    <keyword>add-(new-clef|point|quotable|score|simple-time-signature-style|stroke-(glyph|straight)|text)</keyword>
    <keyword>all-(backend|music|(user|internal)-(grob|translation)|translation)-properties</keyword>
    <keyword>all-((bar-numbers|repeat-counts)-visible|(music|text)-font-encodings)</keyword>
    <keyword>at-bar-line-substitute-caesura-type</keyword>
    <keyword>caesura-to-(bar-line-or-)?divisio</keyword>
    <keyword>calc-(harmonic-pitch|printable-height)</keyword>
    <keyword>calculate-compound-(base-beat|beat-grouping|measure-length)</keyword>
    <keyword>check-((context|grob|music)-path|(quant|slope)-callbacks)</keyword>
    <keyword>collect-((bookpart|(book-)?music|scores)-for-book|music-aux)</keyword>
    <keyword>context-(change|(find-or-)?create|((defs|mod)-from|spec)-music)</keyword>
    <keyword>coord-(rotated?|scale|translate)</keyword>
    <keyword>copy-(binary-file|repeat-chord)</keyword>
    <keyword>create-(file-exclusive|script(-function)?)</keyword>
    <keyword>debug-gc-object-lifetimes-test-object</keyword>
    <keyword>default-(auto-beam-check|(breath|script)-alist|chord-modifier-list|melisma-properties)</keyword>
    <keyword>default-(part-combine-(context-change-state-machine-(one|two)|mark-state-machine))</keyword>
    <keyword>default-(slur-details|time-signature-settings)</keyword>
    <keyword>define-(bar-line|event-(class|function)|fonts)</keyword>
    <keyword>define-(markup((-list)?-command|command-internal)|(music|scheme|syntax|void)-function|tag-group)</keyword>
    <keyword>determine-(split-list|string-fret-finger)</keyword>
    <keyword>display-((lily|scheme)-)?music</keyword>
    <keyword>duration-((dot|log)-factor|visual|(visual-)?length)</keyword>
    <keyword>event-(cause|chord-(notes|pitches|reduce)|class-cons)</keyword>
    <keyword>extract-(beam-exceptions|((named|typed)-)?music)</keyword>
    <keyword>find-(child(-named)?|named-props|pitch-entry)</keyword>
    <keyword>first-(assoc|member|bar-number-invisible(-(and-no-parenthesized-bar-numbers|save-broken-bars))?)</keyword>
    <keyword>format-(bass-figure|dal-segno-text(-brief)?|generic|mark-(((box|circle)-)?(alphabet|(bar)?numbers)))</keyword>
    <keyword>format-(metronome-markup|segno-mark(-considering-bar-lines)|(var)?coda-mark)</keyword>
    <keyword>fret-letter-tablature-format</keyword>
    <keyword>fret-number-tablature-format(-banjo)?</keyword>
    <keyword>get-(bound-note-heads|chord-shape|next-unique-voice-name|postscript-bbox|tweakable-music)</keyword>
    <keyword>interval-(bound|center|end|index|intersection|length|start|widen)</keyword>
    <keyword>layout-(extract-page-properties|line-thickness|set-absolute-staff-size(-in-module)?|set-staff-size)</keyword>
    <keyword>lilypond-(all|main|version)</keyword>
    <keyword>list-(insert-separator|join)</keyword>
    <keyword>lookup-markup(-list)?-command</keyword>
    <keyword>make-(accidental-(dodecaphonic-)?rule|apply-context|articulation)</keyword>
    <keyword>make-((autochange|grace|non-relative|sequential|simultaneous|skip)-)?music</keyword>
    <keyword>make-(bow|circle|(filled|transparent)-box|line|oval|(partial-)?ellipse|(connected-)?path)-stencil</keyword>
    <keyword>make-((c|glyph)-time-signature-markup|clef-set|connected-(line|path-stencil))</keyword>
    <keyword>make-((cue-clef|property)-(un)?set|(default-fonts|pango-font)-tree|duration-of-length|engraver|event-chord)</keyword>
    <keyword>make-((graceless-)?rhythmic-location|(grob-property|voice-props)-(override|revert|set)|harmonic)</keyword>
    <keyword>make-(lyric-repeat-count-formatter|(lyric|span)-event|modal-(inverter|transposer)|multi-measure-rest|page)</keyword>
    <keyword>make-(part-combine-(context-changes|marks)|performer|ps-images|relative|repeat|setting|stencil-(boxer|circler))</keyword>
    <keyword>make-(tmpfile|translator|type-checker)</keyword>
    <keyword>map-(selected-alist-keys|some-music)</keyword>
    <keyword>markup-(command-signature|default-to-string-method|function-(as-string-method|category|properties))</keyword>
    <keyword>markup(-(lambda(-worker)?|list-lambda))?</keyword>
    <keyword>modified-font-metric-font-scaling</keyword>
    <keyword>music-(clone|descriptions|elements|function(-call-error)|invert|name-to-property-table|pitches)</keyword>
    <keyword>music-((selective-)?(filter|map)|to-(music)?xml|type-predicate)</keyword>
    <keyword>note-(names-language|to-cluster)</keyword>
    <keyword>offset-(add|flip-y|fret|scale)</keyword>
    <keyword>output-(file|scopes|stencils?)</keyword>
    <keyword>outputproperty-compatibility</keyword>
    <keyword>override-(head-style|time-signature-setting)</keyword>
    <keyword>pango-pf-((file|font)-name|fontindex)</keyword>
    <keyword>paper-(system-(annotate(-last)?|extent|layout|staff-extents|stencil|system-grob)|variable)</keyword>
    <keyword>partial-(music-function|text-script)</keyword>
    <keyword>print-(book-with-defaults(-as-systems)?|circled-text-callback)</keyword>
    <keyword>property-(override|(un)?set|revert|value)</keyword>
    <keyword>ps-(embed-cff|font-command|page-count)</keyword>
    <keyword>remove-(grace-property|whitespace)</keyword>
    <keyword>revert-(fontSize|head-style|props|time-signature-setting)</keyword>
    <keyword>rhythmic-location([&lt;&gt;]?=?\?|-(bar-number|measure-position))</keyword>
    <keyword>scale-(beam-thickness|by-font-size|fontSize|layout|props)</keyword>
    <keyword>script-or-side-position-cross-staff</keyword>
    <keyword>session-(replay|save|start-record)</keyword>
    <keyword>set-(accidental-style|(default-)?paper-size|global-staff-size|paper-dimension-variables|output-property|symbol)</keyword>
    <keyword>shift-((one-)?duration-log|right-at-line-begin)</keyword>
    <keyword>skip-of-(length|moment-span)</keyword>
    <keyword>stack-(lines|stencil-line|stencils(-padding-list)?)</keyword>
    <keyword>stencil-(dispatch-alist|true-extent|whiteout(-(box|outline))?|with-color)</keyword>
    <keyword>string-(encode|(end|start)swith|regexp-substitute)</keyword>
    <keyword>symbol-(concatenate|footnotes)</keyword>
    <keyword>tags-(keep|remove)-predicate</keyword>
    <keyword>write-(me|performances-midis)</keyword>
  </context>

  <!--functions whose regexes are at most 28 chars long
  and don't start with a capturing group-->
  <context id="sch-func-electric-boogaloo-squishable" class="no-spell-check" style-ref="function">
    <match extended="true">
      (?&lt;![\w.-])(
      != | G_ |
      allow-volta-hook | alterations-in-key | angle-0-(2pi|360) |
      argument-error | arrow-stencil(-maker)? | attributes | average |
      beat-structure | binary-search | book-first-page |
      cached-file-contents | call-after-session | change-pitches |
      close-port | collect-music-aux | comment | comparator-from-key |
      completize-formats | convert-to-(pdf|png|ps) | cross-staff-connect |
      cue-substitute | current-outfile-name | cyclic-base-value |
      debugf | descend-to-context | dimension-arrows | dir-basename |
      dump-stencil-as-EPS | dynamic-default-volume | elbowed-hairpin |
      ellipse-radius | entity | ec | eoc? | eval-carefully | 
      feta-design-size-mapping | first-(assoc|member) | 
      font-name-(split|style) | grob-transformer | gs-(cmd-args|safe-run) |
      gulp-file | horizontal-slash-interval | interpret-markup(-list)? |
      invalidate-alterations | ly-getcwd | lyric-(combine|event) | magstep | 
      marked-up-(headfoot|title) | midi-program | mmrest-of-length |
      moment(-min|&lt;=\?) | move-chord-note | multi-measure-rest |
      notes-to-clusters | number-format | numbered-footnotes | offsetter |
      only-if-beamed | ordered-cons | page-(property|stencil) | percussion\? |
      pitch-invert | postprocess-output | pure-chain-offset-callback | 
      randomize-rand-seed | read-lily-expression | recording-group-emulate |
      repeat(-alt)? | repetition-chord | reset-stencil-colors |
      robust-bar-number-function | safe-(car|last) | score-grace-settings |
      search-executable | select-head-glyph | sign | split-list-by-separator |
      stderr | supported-clefs | style-note-heads |  system-clipped-x-extent |
      tablature-position-on-lines | tag-group-get | tempo |
      unfold-repeats(-fully)? | unity-if-multimeasure |
      value-for-spanner-piece | vector-for-each | warning
      )(?![\w-])
    </match>
  </context>

  <!--scheme functions that go #:aoeui and #:aoeui-aoeui-->
  <context id="sch-func-the-functioning" class="no-spell-check" style-ref="function">
    <match>(?&lt;=_|\W)#:[A-Za-z]+(-[A-Za-z]+)*</match>
  </context>

<!--CONTEXTS, ENGRAVERS, AND THEIR PROPERTIES-->

  <context id="context" class="no-spell-check" style-ref="context">
    <match>(?&lt;![A-Za-z_])(\\?\%{contexts})(?![A-Za-z_])</match>
  </context>

  <context id="con-property" class="no-spell-check" style-ref="context">
    <prefix>(?&lt;![\w-])</prefix>
    <suffix>(?![\w-])</suffix>
    <keyword>(lyricMelisma|topLevel)Alignment</keyword> <!--Alignment-->
    <keyword>((double|end|start)Repeat(Segno)?|fine((StartRepeat)?Segno)?|section|underlyingRepeat)BarType</keyword> <!--BarType-->
    <keyword>(partial|(slur|tie)Melisma)Busy</keyword> <!--Busy-->
    <keyword>c(ueC)?lef(Glyph|Position|Transposition(Formatter|Style)?)</keyword> <!--clef, cueClef-->
    <keyword>(de)?crescendo(Spanner|Text)</keyword> <!--crescendo, decrescendo-->
    <keyword>(first|force)Clef</keyword> <!--firstClef, forceClef-->
    <keyword>(follow|searchFor)Voice</keyword> <!--followVoice, searchForVoice-->
    <keyword>(metronomeMark|dalSegnoText|lyricRepeatCount)Formatter</keyword> <!--Formatter-->
    <keyword>(key|local)Alterations</keyword> <!--keyAlterations, localAlterations-->
    <keyword>(null|suggest)Accidentals</keyword> <!--nullAccidentals, suggestAccidentals-->
    <keyword>(fingering|strokeFinger)Orientations</keyword> <!--Orientations-->
    <keyword>(tuplet|volta)SpannerDuration</keyword> <!--SpannerDuration-->
    <keyword>(s|tabS)taffLineLayoutFunction</keyword> <!--staffLineLayoutFunction, tabStaffLineLayoutFunction-->
    <keyword>(aDue|fine|solo(II)?)Text</keyword> <!--Text-->
    <keyword>(explicit((Cue)?Clef|KeySignature)|finalFineText|initialTimeSignature|repeatCount)Visibility</keyword> <!--Visibility-->
    <keyword>additional(BassStrings|PitchPrefix)</keyword>
    <keyword>alternative(Number(ingStyle)?|Restores)</keyword>
    <keyword>associatedVoice(Context|Type)?</keyword>
    <keyword>auto(Accidentals|BeamCheck|Beaming|Cautionaries)</keyword>
    <keyword>bar(Check(LastFail|Synchronize)|ExtraVelocity|Number(Formatter|Visibility))</keyword>
    <keyword>beam(Exceptions|HalfMeasure|MelismaBusy)</keyword>
    <keyword>beat(ExtraVelocity|Structure)</keyword>
    <keyword>breathMark(Definitions|Type)</keyword>
    <keyword>chord(Changes|Name(Exceptions|Function|LowercaseMinor|Separator)|(Note|Root)Namer|PrefixSpacer)</keyword>
    <keyword>completion(Busy|Factor|Unit)</keyword>
    <keyword>create(KeyOnClefChange|Spacing)</keyword>
    <keyword>current(Bar(Line|Number)|Chord(Cause|Text)|(Command|Musical)Column|(Performance|Rehearsal)MarkEvent)</keyword>
    <keyword>dynamicAbsoluteVolumeFunction</keyword>
    <keyword>figuredBass(AlterationDirection|CenterContinuations|Formatter)</keyword>
    <keyword>figuredBass(LargeNumberAlignment|Plus(Direction|StrokedAlist))</keyword>
    <keyword>forbidBreak(BetweenBarLines)?</keyword>
    <keyword>harmonic(Accidentals|Dots)</keyword>
    <keyword>has(AxisGroup|StaffSpacing)</keyword>
    <keyword>ignore(Bar(Number)?Checks|FiguredBassRest|Melismata)</keyword>
    <keyword>instrument((Cue)?Name|Equalizer|Transposition)</keyword>
    <keyword>last(Chord|KeyAlterations)</keyword>
    <keyword>measure(BarType|Length|Position|StartNow)</keyword>
    <keyword>middleC((Clef|Cue)?Position|Offset)</keyword>
    <keyword>midi(Balance|ChannelMapping|(Chorus|Reverb)Level|Expression)</keyword>
    <keyword>midi(Instrument|(Maxi|Mini)mumVolume|MergeUnisons|PanPosition|SkipOffset)</keyword>
    <keyword>minimum(Fret|PageTurnLength|RepeatLengthForPageTurn)</keyword>
    <keyword>note((Name|ToFret)Function|NameSeparator)</keyword>
    <keyword>ottava(StartNow|tion(Markups)?)</keyword>
    <keyword>partCombine(Forced|TextsOnNote)</keyword>
    <keyword>pedal(Sostenuto|Sustain|UnaCorda)(Strings|Style)</keyword>
    <keyword>print((Accidental|Octave)Names|KeyCancellation|NotesLanguage|PartCombineTexts)</keyword>
    <keyword>proportionalNotationDuration</keyword>
    <keyword>rest(CompletionBusy|NumberThreshold)</keyword>
    <keyword>segno(BarType|Mark(Count|Formatter)|Style)</keyword>
    <keyword>short(Instrument|Vocal)Name</keyword>
    <keyword>string(FretFingerList|NumberOrientations|OneTopmost|Tunings)</keyword>
    <keyword>suspend(MelodyDecisions|RestMerging)</keyword>
    <keyword>systemStartDelimiter(Hierarchy)?</keyword>
    <keyword>tempo(HideNote|WholesPerMinute)</keyword>
    <keyword>timeSignature(Fraction|Settings)</keyword>
  </context>

  <context id="con-prop-squishable" class="no-spell-check" style-ref="context">
    <match extended="true">
      (?&lt;![\w-])(
      accidentalGrouping | align(Above|Below)Context | alterationGlyphs |
      baseMoment | busyGrobs | caesuraType(Transform)? | centerBarNumbers |
      codaMark(Count|Formatter) | connectArpeggios | countPercentRepeats |
      defaultStrings | doubleSlurs | drum(Pitch|Style)Table | endAtSkip |
      extendersOverRests | extraNatural | finalizations | fontSize |
      forceBreak | fretLabels | glissandoMap | graceSettings | gridInterval |
      handleNegativeFrets | highStringOne | implicitBassFigures |
      includeGraceNotes | internalBarNumber | keepAliveInterfaces |
      keyAlterationOrder | magnifyStaffValue | majorSevenSymbol | 
      maximumFretStretch | melismaBusy(Properties)? | minorChordModifier | 
      noChordSymbol | output(?!-) | predefinedDiagramTable | 
      quoted(Cue)?EventTypes | rehearsalMark(Formatter)? | repeatCommands | 
      restrainOpenStrings | rootSystem | scriptDefinitions | shapeNoteStyles | 
      skip(Bars|Typesetting) | slashChordSeparator |  squashedPosition | 
      (?&lt;!-)stanza | startAt(NoteColumn|Skip) | stavesFound |
      stem(Left|Right)BeamCount | strictBeatBeaming | subdivideBeams |
      supportNonIntegerFret | tablatureFormat | tieWaitForNote | timing | tonic |
      tupletFullLength(Note)? | useBassFigureExtenders | vocalName | whichBar
      )(?![\w-])
    </match>
  </context>

  <!--engravers, performers, and translators-->
  <context id="engraver" class="no-spell-check" style-ref="engraver">
    <match>(?&lt;!#)[A-Z][a-z]+_([a-z]+_)*(engraver|performer|translator)</match>
  </context>

  <!--engravers, but they're functions for some reason-->
  <context id="engraver-but-procedure" class="no-spell-check" style-ref="function">
    <match>(?&lt;=#)[A-Z][a-z]+_([a-z]+_)*(engraver|performer|translator)</match>
  </context>

<!--GROBS AND THEIR PROPERTIES-->

  <context id="grob" class="no-spell-check" style-ref="layout-object">
    <prefix>(?&lt;![\w-])</prefix>
    <suffix>(?![\w-])</suffix>
    <keyword>(Ligature|Ottava|PianoPedal|Tuplet)Bracket</keyword> <!--Bracket-->
    <keyword>(LaissezVibrer)?Tie(Column)?</keyword> <!--LaissezVibrerTie and Tie-->
    <keyword>(Kievan|Mensural|Vaticana)Ligature</keyword> <!--Ligature-->
    <keyword>(Coda|Metronome|Rehearsal|Segno)Mark</keyword> <!--Mark-->
    <keyword>(Stanza|String|Tuplet)Number</keyword> <!--Number-->
    <keyword>(NonMusical)?PaperColumn</keyword> <!--PaperColumn-->
    <keyword>(Sostenuto|Sustain|UnaCorda)Pedal(LineSpanner)?</keyword> <!--Pedal and PedalLineSpanner-->
    <keyword>(Caesura|CombineText|Jump)Script</keyword> <!--Script-->
    <keyword>(Phrasing)?Slur</keyword> <!--Slur-->
    <keyword>(FingerGlide|LedgerLine|Spacing)Spanner</keyword> <!--Spanner-->
    <keyword>Accidental(Cautionary|Placement|Suggestion)?</keyword>
    <keyword>Ambitus(Accidental|Line|NoteHead)?</keyword>
    <keyword>BassFigure(Alignment(Positioning)?|Bracket|Continuation|Line)?</keyword>
    <keyword>CenteredBarNumber(LineSpanner)?</keyword>
    <keyword>Double(PercentRepeat(Counter)?|RepeatSlash)</keyword>
    <keyword>Dynamic(LineSpanner|Text(Spanner)?)</keyword>
    <keyword>Grid(ChordName|Line|Point)</keyword>
    <keyword>Key(Cancellation|Signature)</keyword>
    <keyword>Lyric(Extender|Hyphen|RepeatCount|Space|Text)</keyword>
    <keyword>Measure(Counter|Grouping|Spanner)</keyword>
    <keyword>MultiMeasureRest(Number|Script|Text)?</keyword>
    <keyword>Note(Collision|Column|Head|Name|Spacing)</keyword>
    <keyword>Repeat(Slash|Tie(Column)?)</keyword>
    <keyword>Staff(Ellipsis|Grouper|Highlight|Spacing|Symbol)</keyword>
    <keyword>System(Start(Bar|Brace|Bracket|Square))?</keyword>
    <keyword>Trill(Pitch(Accidental|Group|Head|Parentheses)|Spanner)</keyword>
    <keyword>Vertical(Alignment|AxisGroup)</keyword>
  </context>

  <context id="grob-squishable" class="no-spell-check" style-ref="layout-object">
    <match extended="true">
      (?&lt;![\w-])(
      Arpeggio | BalloonText | Bar(Line|Number) | Beam | Bend(After|Spanner) |
      BreakAlign(Group|ment) | BreathingSign | Chord(Name|Square) |
      Clef(Modifier)? | ClusterSpanner(Beacon)? | Control(Point|Polygon) |
      Cue(End)?Clef | Custos | Divisio | Dot(s|Column) | DurationLine |
      Episema | Fingering(Column)? | Flag | Footnote | FretBoard | Glissando |
      GraceSpacing | Hairpin | HorizontalBracket(Text)? |
      Instrument(Name|Switch) | LeftEdge | MelodyItem | Parentheses |
      PercentRepeat(Counter)? | Rest(Collision)? | Script(Column|Row)? |
      SectionLabel | SignumRepetitionis | SpanBar(Stub)? | Stem(Stub|Tremolo)? |
      StrokeFinger | TabNoteHead | Text(Mark|Script|Spanner) | TimeSignature |
      VoiceFollower | VoltaBracket(Spanner)? | VowelTransition
      )(?![\w-])
    </match>
  </context>

  <!--user and internal backend properties
  they currently only highlight when after a dot (.damping), a tweak command
  (\tweak color), or an offset or alterBroken command (\offset height 2 Hairpin)-->
  <context id="grob-property" class="no-spell-check" style-ref="property">
    <prefix>((?&lt;=\.)|((?&lt;=\\tweak\s)|(?&lt;=\\offset\s)|(?&lt;=\\alterBroken\s))\s*)</prefix>
    <suffix>(?![\w-])</suffix>
    <keyword>(align|stacking)-dir</keyword> <!--align-dir, stacking-dir-->
    <keyword>(clef|endpoint)-alignments</keyword> <!-- -alignments-->
    <keyword>(a|de)scendens</keyword> <!--ascendens, descendens-->
    <keyword>(show-)?control-points</keyword> <!--control-points, show-control-points-->
    <keyword>(((fret|woodwind)-diagram|harp-pedal)-)?details</keyword> <!--details-->
    <keyword>(arpeggio|fa-merge|grow|head)-direction</keyword> <!-- -direction-->
    <keyword>((all|conditional|side-support|vertical-skyline)-)?elements</keyword> <!--elements-->
    <keyword>(bar|main|widened)-extent</keyword> <!-- -extent-->
    <keyword>(ligature|pes-or)-flexa</keyword> <!-- -flexa-->
    <keyword>(auto-knee|maximum)-gap</keyword> <!-- -gap-->
    <keyword>(head-)?width</keyword> <!--head-width, width-->
    <keyword>((segno|slash-negative)-)?kern</keyword> <!--kern-->
    <keyword>(left|right)-(bound-info|items|neighbor|number-text|padding)</keyword> <!--left-, right- -->
    <keyword>(footnotes-)?(after|before)-line-breaking</keyword> <!-- -line-breaking-->
    <keyword>(visible-over-)?note-heads</keyword> <!--note-heads, visible-over-note-heads-->
    <keyword>(broken-bound|horizon)-padding</keyword> <!-- -padding-->
    <keyword>(parent|self)-alignment-(X|Y)</keyword> <!--parent-alignment, self-alignment-->
    <keyword>(c0|delta|voiced|quantize)-position</keyword> <!-- -position-->
    <keyword>((flat|quantized|sharp)-)?positions</keyword> <!--positions-->
    <keyword>(base|common)-shortest-duration</keyword> <!-- -shortest-duration-->
    <keyword>(show-)?(horizontal|vertical)-skylines</keyword> <!-- -skylines-->
    <keyword>(grace|packed|strict-(grace|note))-spacing</keyword> <!-- -spacing-->
    <keyword>(stroke-)?style</keyword> <!--style, stroke-style-->
    <keyword>((hair|thick)-)?thickness</keyword> <!--thickness-->
    <keyword>(make-dead-)?when</keyword> <!--when-->
    <keyword>[XY]-(attachment|common|extent|offset)</keyword> <!--X-, Y- -->
    <keyword>add-(cauda|join|stem(-support)?)</keyword>
    <keyword>adjacent-(pure-heights|spanners)</keyword>
    <keyword>allow-(loose-spacing|span-bar)</keyword>
    <keyword>alteration(-(glyph-name-)?alist)?</keyword>
    <keyword>annotation(-(balloon|line))?</keyword>
    <keyword>avoid-(note-head|scripts|slur)</keyword>
    <keyword>beamlet-(default-length|max-length-proportion)</keyword>
    <keyword>beam(-(segments|thickness|width))?</keyword>
    <keyword>bound-(alignment-interfaces|details|padding|prefatory-paddings)</keyword>
    <keyword>bracket(-(flare|text|visibility))?</keyword>
    <keyword>break-(alignment|align-(anchor(-alignment)?|orders|symbol(s)?)|overshoot|visibility)</keyword>
    <keyword>collision-(interfaces|voice-only)</keyword>
    <keyword>dash-(definition|fraction|period)</keyword>
    <keyword>default-(direction|staff-staff-spacing)</keyword>
    <keyword>dot(-(count|negative-kern|placement-list|stencil))?</keyword>
    <keyword>extra-(dy|offset|spacing-(height|width))</keyword>
    <keyword>flexa-(height|interval|width)</keyword>
    <keyword>font(-(encoding|family|features|name|series|shape|size))?</keyword>
    <keyword>footnote(-(music|stencil|text))?</keyword>
    <keyword>french-beaming(-stem-adjustment)?</keyword>
    <keyword>full-(length-(padding|to-extent)|measure-extra-space|size-change)</keyword>
    <keyword>glyph(-(left|name|right))?</keyword>
    <keyword>hide-tied-accidental-after-break</keyword>
    <keyword>ignore-(ambitus|collision)</keyword>
    <keyword>in-note-(direction|padding|stencil)</keyword>
    <keyword>keep-(alive-with|inside-line)</keyword>
    <keyword>knee(-(spacing-correction|to-beam))?</keyword>
    <keyword>ledger-(extra|line-thickness|positions(-function)?)</keyword>
    <keyword>line-(break-(penalty|permission|system-details)|count|positions|thickness)</keyword>
    <keyword>max-(beam-connect|symbol-separation)</keyword>
    <keyword>measure-(count|division(-(chord-placement|lines)-alist)?|length)</keyword>
    <keyword>merge-differently-(dotted|headed)</keyword>
    <keyword>minimum-(distance(s)?|length(-(after-break|fraction))?|space|translations-alist|(X|Y)-extent)</keyword>
    <keyword>neutral-(direction|position)</keyword>
    <keyword>no-(ledgers|stem-extend)</keyword>
    <keyword>non-(break-align-symbols|default|musical)</keyword>
    <keyword>nonstaff-(non|related|unrelated)staff-spacing</keyword>
    <keyword>note-(collision(-threshold)?|columns|names)</keyword>
    <keyword>number-(range-separator|type)</keyword>
    <keyword>numbering-assertion-function</keyword>
    <keyword>outside-staff-((horizontal-)?padding|placement-directive|priority)</keyword>
    <keyword>page-((break|turn)-(penalty|permission)|number)</keyword>
    <keyword>pure-(relevant-(grobs|items|spanners)|Y-(common|extent|offset-in-progress))</keyword>
    <keyword>remove-(empty|first|layer)</keyword>
    <keyword>round-up-(exceptions|to-longer-rest)</keyword>
    <keyword>script(s|-(column|priority|stencil))</keyword>
    <keyword>shortest-(duration-space|(playing|starter)-duration)</keyword>
    <keyword>side-(axis|relative-direction)</keyword>
    <keyword>skyline-(horizontal|vertical)-padding</keyword>
    <keyword>space-(alist|increment|to-barline)</keyword>
    <keyword>spacing(-(increment|pair|wishes))?</keyword>
    <keyword>spanner-(broken|id|placement)</keyword>
    <keyword>staff-(affinity|grouper|padding|position|space|symbol)</keyword>
    <keyword>staff(group)?-staff-spacing</keyword>
    <keyword>stem(-(attachment|begin-position|info|spacing-correction))?</keyword>
    <keyword>text(-(alignment-(X|Y)|direction))?</keyword>
    <keyword>toward-stem-shift(-in-column)?</keyword>
    <keyword>tuplet-(number|slur|start)</keyword>
    <keyword>X-(align-on-main-noteheads|positions)</keyword>
  </context>

  <!--TODO: turn this into define-regex or smth and do a container context-->
  <context id="grob-property-squishable" class="no-spell-check" style-ref="property">
    <match extended="true">
      ((?&lt;=\.)|
        ((((?&lt;=\\tweak\s)|
        (?&lt;=\\offset\s)|
        (?&lt;=\\alterBroken\s)))
      \s*))(
      accidental-grob(s)? | arrow-(length|width) | auctum |
      axis-group-parent-(X|Y) | automatically-numbered | average-spacing-wishes |
      axes | bars | baseline-skip | beamed-stem-shorten | beaming |
      begin-of-line-visible | bend-me | between-cols | bezier |
      bounded-by-me | breakable | cause | cavum | chord-(dots-limit|names) | 
      circled-tip | clip-edges | collapse-height | color | columns | 
      concaveness | concurrent-hairpins | connect-to-neighbor | context-info |
      count-from | covered-grobs | cross-staff | damping | dashed-edge | 
      deminutum | digit-names | direction(-source)? | display-cautionary | dots |
      double-stem-separation | duration-log | eccentricity | edge-(height|text) | 
      encompass-objects | expand-limit | extroversion | fa-styles | figures |
      filled | flag(-(count|style))? | force-hshift | forced(-spacing)? |
      fraction | gap(-count)? | glissando-(skip|index) | graphical |
      has-span-bar | heads | height(-limit)? | horizontal-shift | 
      id(eal-distances)? | implicit | important-column-ranks | inclinatum | 
      index | inspect-quants | interfaces | items-worth-living | labels | layer |
      least-squares-dy | length(-fraction)? | linea | (long|pedal)-text |
      maybe-loose | melody-spanner | meta | neighbors | next | normal-stems | 
      normalized-endpoints | note-head | oriscus | output-attributes | 
      padding(-pairs)? | parenthesis-(friends|id) | parenthesized | 
      positioning-done | prefer-dotted-right | prefix-set | primitive |
      protrusion | quilisma | rank-on-page | ratio | replacement-alist | 
      restore-first | rests | rest(-collision)? | rhythmic-location | rotation | 
      rounded | same-direction-correction | shape | shorten(-pair)? | size |
      skip-quanting | slope | slur(-padding)? | snap-radius | span-start | 
      springs-and-rods | stemlet-length | stems | stencil(s)? | sticky-host | 
      stropha | system-Y-offset | tie(s|-configuration)? | to-barline |
      transparent | tremolo-flag | tuplets | vertical-alignment | virga | 
      uniform-stretching | usable-duration-logs | use-skylines | used |
      whiteout(-style)? | word-space | x-offset | zigzag-(length|width)
      )(?![\w-])
    </match>
  </context>

  <!--(this and the subsubprops don't work with new lines)-->
  <context id="grob-subproperty" class="no-spell-check" style-ref="property">
    <match extended="true">
      ((?&lt;=caesuraType\.)|(?&lt;=clef-alignments\.)|(?&lt;=details\.)|(?&lt;=space-alist\.)|(?&lt;=-spacing\.))
      ([CFG]|[a-z]+(-[a-z]+)*)
    </match>
  </context>
  
  <context id="grob-subsubproperty" class="no-spell-check" style-ref="property">
    <match extended="true">
      ((?&lt;=bend-amount-strings\.)|(?&lt;=(\.left|right)-broken\.)|(?&lt;=(\.left|right)\.)|(?&lt;=-properties\.))
      ([XY]|[a-z]+(-[a-z]+)*)
    </match>
  </context>

<!--\*** COMMANDS, <***> CHORD CONSTRUCTS, SCHEME CONSTRUCT STUFF-->

  <context id="command" style-ref="function" class="no-spell-check" extend-parent="false" end-parent="true">
    <start>(?&lt;!\\)\\(?!\\)</start>
    <end>\s|$</end>
    <include>
      <context ref="articulation"/>
      <context ref="dash-caret-underscore-string"/>
      <context ref="chord-modifier"/>
      <context ref="dynamic"/>
      <context ref="long-articulation"/>
      <context ref="misc-articulation"/>
      <context ref="short-articulation"/>
      <context ref="string"/>
    </include>
  </context>

  <!--here so you can typeset your figured bass in PEACE
  \! highlights as command when inside a < > but in figured bass that
  stops extenders which are started by a command so ¯\_(ツ)_/¯-->
  <context id="chord-construct" end-at-line-end="true">
    <start>(?&lt;!&lt;)&lt;(?!&lt;)</start>
    <end>(?&lt;![>\^_-])&gt;(?!&gt;)</end>
    <include>
      <context ref="chord-modifier"/>
      <context ref="command"/>
      <context ref="comment"/>
      <context ref="misc-articulation"/>
      <context ref="number"/>
      <context id="fig-bass-backslash" style-ref="function">
        <match>\\\\</match>
      </context>
    </include>
  </context>

  <!--here so parentheses are not highlighted if they're part of scheme constructs or whatever
  needs a separate strings context that doesn't end parent otherwise it breaks sometimes-->
  <context id="sch-expression">
      <start>(#'?|\$|`)\(</start>
    <end>\)</end>
    <include>
      <context ref="all-caps-stuff"/>
      <context ref="boolean"/>
      <context ref="command"/>
      <context ref="encode"/>
      <context ref="lily-preds"/>
      <context ref="number"/>
      <context ref="predicate-soup"/>
      <context ref="sch-func"/>
      <context ref="sch-func-electric-boogaloo"/>
      <context ref="sch-func-electric-boogaloo-squishable"/>
      <context ref="sch-func-the-functioning"/>
      <context ref="scheme:function"/>
      <context ref="scheme:keyword"/>
      <context ref="scheme:line-comment"/>
      <context ref="sch-expression"/>
      <context id="sch-expression-string" style-ref="string" end-parent="false">
        <start>"</start>
        <end>(?&lt;!(?&lt;!\\)\\)"</end>
      </context>
      <context id="extra-parentheses">
        <start>\(</start><end>\)</end>
        <include>
          <context ref="all-caps-stuff"/>
          <context ref="boolean"/>
          <context ref="command"/>
          <context ref="encode"/>
          <context ref="lily-preds"/>
          <context ref="number"/>
          <context ref="predicate-soup"/>
          <context ref="sch-expression-string"/>
          <context ref="sch-func"/>
          <context ref="sch-func-electric-boogaloo"/>
          <context ref="sch-func-electric-boogaloo-squishable"/>
          <context ref="sch-func-the-functioning"/>
          <context ref="scheme:function"/>
          <context ref="scheme:keyword"/>
          <context ref="scheme:line-comment"/>
          <context ref="extra-parentheses"/>
          <context ref="sch-expression"/>
        </include>
      </context>
    </include>
  </context>

  <context id="dash-caret-underscore-string" style-ref="string">
    <start>[-^_](?=")</start>
    <include>
      <context ref="string"/>
    </include>
  </context>

  <context id="dash-caret-underscore-command" style-ref="function">
    <start>[-^_](?=\\)</start>
    <include>
      <context ref="command"/>
    </include>
  </context>

  </include>
</context>
</definitions>

</language>
